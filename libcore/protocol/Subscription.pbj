/*  Sirikata Serialization Protocol
 *  Subscription.pbj
 *
 *  Copyright (c) 2009, Daniel Reiter Horn
 *  All rights reserved.
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions are
 *  met:
 *  * Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *  * Neither the name of Sirikata nor the names of its contributors may
 *    be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
 * OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
"pbj-0.0.3"

package Sirikata.Protocol;

// SUBSCRIPTION port
message Subscribe {
    reserve 1 to 8;//in case we ever need to forward these around a bit
    ///the name of the specific broadcast to listen to, negative are owned by the space (position, space)
    optional sint32 broadcast_name=9;
    ///the minimum time between updates: 0 means every update is broadcast
    ///if ommitted, it means that you wish to unsubscribe from the broadcast.
    optional duration update_period=10;

    optional uuid object=11;
    
    reserve 1536 to 2560;
    reserve 229376 to 294912;
}

// BROADCAST port
message Broadcast {
    reserve 1 to 8;//in case we ever need to forward these around a bit
    ///the name of the specific broadcast to listen to, negative are owned by the space (position, scale)
    optional sint32 broadcast_name=9;
    ///the contents of a message to be broadcast (if sent from the creator to subscription),
    ///or the update (if sent from subscription to the subscribers)
    optional bytes data=10;

    optional uuid object=11;
    
    reserve 1536 to 2560;
    reserve 229376 to 294912;
}
