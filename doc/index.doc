/*  Sirikata
 *  index.doc
 *
 *  Copyright (c) 2009, Ewen Cheslack-Postava
 *  All rights reserved.
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions are
 *  met:
 *  * Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *  * Neither the name of Sirikata nor the names of its contributors may
 *    be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
 * OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/** \page index Introduction
 *
 *  <h2> Introduction </h2>
 *  Sirikata is an BSD licensed open source platform for games and virtual
 *  worlds. We aim to provide a set of libraries and protocols which can be
 *  used to deploy a virtual world, as well as fully featured sample
 *  implementations of services for hosting and deploying these worlds.
 *
 *  Sirikata is not an application but a platform on which shared, networked,
 *  3D applications can be built.  Examples include multiplayer online games,
 *  interactive meeting spaces, and social virtual worlds.  Sirikata
 *  recognizes that large parts of these systems are identical -- objects
 *  join a shared space, discover other objects, communicate with each other,
 *  have behavior defined by small scripts, and so on -- and attempts to
 *  provide scalable, flexible, and extensible implementations of these
 *  services.  Application developers can build on Sirikata's infrastructure,
 *  taking advantage of a much lower barrier to entry and proven scalability.
 *
 *  <h2> Target Audience </h2>
 *  This manual is targeted at <b>users</b> of Sirikata.  Note that this means
 *  users of the platform, not users of applications built on Sirikata.  So
 *  in this case, user means an application developer.  Because Sirikata has
 *  many standard components with reasonable defaults, ideally applications
 *  can be developed mainly in scripting languages.  However, this manual is
 *  geared towards users who need to also extend Sirikata, adding
 *  functionality which is not already available from the existing plugins.
 *
 *  <h2> Latest Documentation </h2>
 *  Please make sure you have the latest documentation, or the version
 *  appropriate for your release, before proceeding.
 *  <ul>
 *  <li> See http://www.sirikata.com/docs/ for all available documentation
 *  <li> See http://www.sirikata.com/docs/head/ for documentation generated
 *       nightly from the source code repository
 *  </ul>
 *
 *  <h2> How to Proceed </h2>
 *   - \ref architecture - High level description of the architecture of the
 *          entire system. For more detailed information on each component see:
 *    - \ref space_architecture - Introduction to the architecture of a space
 *           server, which simulates and mediates interactions between objects.
 *    - \ref oh_architecture - Introduction to the architecture of object hosts,
 *           which simulate individual objects, running their scripts.
 *    - \ref cdn_architecture - Introduction to the content distribution network
 *           architecture, which handles long term static storage of content
 *           such as scripts and meshes.
 *   - \ref authoritative_state - Explanation of where the authoritative version
 *          of state is maintained.  For security and consistency, not all state
 *          for a given object resides with the object itself.
 */
